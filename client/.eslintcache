[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/FlightInfo.js":"4","/app/src/components/FlightDetail.js":"5","/app/src/services/util/request.js":"6","/app/src/services/util/const.js":"7"},{"size":801,"mtime":1611134030844,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611134030844,"results":"10","hashOfConfig":"9"},{"size":271,"mtime":1611134030843,"results":"11","hashOfConfig":"9"},{"size":7953,"mtime":1611144611287,"results":"12","hashOfConfig":"9"},{"size":3600,"mtime":1611144539041,"results":"13","hashOfConfig":"9"},{"size":2786,"mtime":1611134030845,"results":"14","hashOfConfig":"9"},{"size":135,"mtime":1611134030845,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ql40k",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/components/FlightInfo.js",["31"],"import React, { useState, useEffect } from 'react';\nimport request from '../services/util/request';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  CircularProgress,\n  Divider,\n  Paper,\n  Grid\n} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    marginTop: 30,\n    marginBottom: 10,\n    marginLeft: 10,\n    display: 'block'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14,\n    float: 'left'\n  },\n  pos: {\n    marginBottom: 12\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    marginBottom: 10,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  alertRoot: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  column: {\n    flexBasis: '15%',\n    display: 'inline-block',\n    marginLeft: '10px',\n    float: 'left'\n  },\n  column2: {\n    marginLeft: '10px',\n    marginRight: '10px'\n  },\n  block: {\n    backgroundColor: '#FFFFFF',\n    display: 'flex'\n  },\n  gridRoot: {\n    width: 'fit-content',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.secondary,\n    '& svg': {\n      margin: theme.spacing(1.5)\n    },\n    '& hr': {\n      margin: theme.spacing(1, 1)\n    }\n  }\n}));\n\nexport const FlightInfo = () => {\n  let { id } = useParams();\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [status, setStatus] = useState('');\n  const [severity, setSeverity] = useState('success');\n  const objectEntries = ['LANDED', 'ON SCHEDULE', 'DELAYED'];\n\n  // Declare a new state variable, which we'll call \"count\"\n  const getDetails = request({\n    method: 'GET',\n    route: `/api/flight/${id}`\n  });\n\n  const pollDetails = async () => {\n    return await getDetails;\n  };\n\n  const handleChange = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const saveStatus = async () => {\n    try {\n      data.flight.status = status;\n      const updateDetails = request({\n        method: 'POST',\n        route: `/api/flight/update`,\n        body: data\n      });\n      const result = await updateDetails;\n      if (result.data) {\n        setSeverity('success');\n        handleClick();\n      }\n    } catch (error) {\n      console.error(error, 'flightInfo/saveStatus');\n      setSeverity('error');\n      handleClick();\n    }\n  };\n\n  const renderData = ({ flight }) => {\n    return (\n      <div>\n        <Paper elevation={3} className={classes.block}>\n          <div style={{ display: 'block', margin: '40px' }}>\n            <div style={{ margin: '10px', display: 'block' }}>\n              <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item>\n                  <Typography variant=\"h4\">{flight.sourcePortName}</Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"h4\">{flight.sourcePortCode}</Typography>\n                </Grid>\n                <Grid item>\n                  <Typography color=\"textSecondary\" variant=\"h5\">\n                    {flight.flightCode}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <FormControl className={classes.formControl}>\n                    <Select\n                      labelId=\"demo-simple-select-helper-label\"\n                      id=\"demo-simple-select-helper\"\n                      value={status}\n                      onChange={handleChange}\n                    >\n                      {objectEntries.map((elm) => {\n                        return <MenuItem value={elm}>{elm}</MenuItem>;\n                      })}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item>\n                  <Button\n                    size=\"small\"\n                    onClick={() => saveStatus()}\n                    color=\"primary\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent style={{ marginTop: '10px' }}>\n                <Grid container alignItems=\"center\" spacing={2}>\n                  <Grid item>\n                    <div style={{ display: 'block', paddingRight: '10px' }}>\n                      <div className={classes.title}>\n                        <Typography variant=\"h6\" style={{ marginRight: '10px' }}>\n                          Flight Details:{'  '}\n                        </Typography>\n                      </div>\n                    </div>\n                  </Grid>\n                  <Grid item>\n                    <div style={{ display: 'block' }}>\n                      <Grid container alignItems=\"center\" className={classes.gridRoot}>\n                        <div className={classes.column2}>\n                          <Typography variant=\"body2\" component=\"p\">\n                            Scheduled time\n                          </Typography>\n                          <Typography variant=\"body2\" component=\"p\">\n                            {moment(flight.scheduledArrival).format('LT')}\n                          </Typography>\n                        </div>\n                        <Divider orientation=\"vertical\" flexItem />\n                        <div className={classes.column2}>\n                          <Typography variant=\"body2\" component=\"p\">\n                            Scheduled date\n                          </Typography>\n                          <Typography variant=\"body2\" component=\"p\">\n                            {moment(flight.scheduledArrival).format('L')}\n                          </Typography>\n                        </div>\n                        <Divider orientation=\"vertical\" flexItem />\n                        <div className={classes.column2}>\n                          <Typography variant=\"body2\" component=\"p\">\n                            Airline\n                          </Typography>\n                          <Typography variant=\"body2\" component=\"p\">\n                            {flight.flightProvider}\n                          </Typography>\n                        </div>\n                      </Grid>\n                    </div>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </div>\n        </Paper>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    !data &&\n      pollDetails().then((res) => {\n        setData(res.data);\n        setStatus(res.data.flight.status);\n      });\n  }, [data, status]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Container>{data && renderData(data)}</Container>\n        {!data && <CircularProgress />}\n      </header>\n      <body></body>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {severity === 'success' ? 'Status saved' : 'An problem occurred'}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n","/app/src/components/FlightDetail.js",[],"/app/src/services/util/request.js",[],"/app/src/services/util/const.js",[],{"ruleId":"32","severity":1,"message":"33","line":249,"column":6,"nodeType":"34","endLine":249,"endColumn":20,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pollDetails'. Either include it or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [data, pollDetails, status]",{"range":"39","text":"40"},[7463,7477],"[data, pollDetails, status]"]